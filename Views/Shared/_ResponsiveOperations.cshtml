@{
    string colorCode = "";
    string icon = "";

    if (ViewBag.showToast != null)
    {
        if (ViewBag.Head == "Success")
        {
            colorCode = "#00D100";
            icon = "fa-solid fa-check";
        }
        else
        {
            colorCode = "#FF0000";
            icon = "fa-solid fa-circle-exclamation";
        }
    }
}


<!DOCTYPE html>

<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/layout.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
          integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw=="
          crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <link href="~/css/@ViewData["css"]" rel="stylesheet" />
    <link rel="stylesheet" href="/css/toast.css" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <title>@ViewData["Title"]</title>

    <style>
        .navbar .links {
            display: flex;
            gap: 3rem;
        }
    </style>
</head>
<body>
    <header>
        <div class="navbar">
            <div class="logo"><a id="a-tag" href="@Url.Action("ViewProjects","Project")">Taskify</a></div>
            <ul class="links">
                @if (Context.Session.GetInt32("linkCode") == 0)
                {
                    <li class="list"><a id="a-tag" href="@Url.Action("AddEmployee" , "Employee")">Add Employee</a></li>
                }
                <li class="list"><a id="a-tag" href="@Url.Action("ViewEmployees" , "Employee" , new {linkCode = Context.Session.GetInt32("linkCode")})">View Employees</a></li>
                <li class="list">
                    @if (Context.Session.GetInt32("linkCode") == 0)
                    {
                        <a id="a-tag" href="@Url.Action("CreateTask", "Task")">Create Task</a>
                    }
                </li>
                <li class="list"><a id="a-tag" href="@Url.Action("ViewTasks", "Task" , new {linkCode = Context.Session.GetInt32("linkCode")})">View Tasks</a></li>
            </ul>

            <a href="@Url.Action("Logout","Login")" class="action_btn">Logout</a>

            <div class="toggle_btn">
                <i class="fa-solid fa-bars" aria-hidden="true"></i>
            </div>
        </div>

        <div class="dropdown">
            <li class="list"><a id="a-tag" href="@Url.Action("AddEmployee" , "Employee")">Add Employee</a></li>
            <li class="list"><a id="a-tag" href="@Url.Action("ViewEmployees" , "Employee")">View Employees</a></li>
            <li class="list">
                <a id="a-tag" href="@Url.Action("CreateTask", "Task")">Create Task</a>
            </li>
            <li class="list"><a id="a-tag" href="@Url.Action("ViewTasks", "Task")">View Tasks</a></li>
            <li class="list"><a href="@Url.Action("Logout","Login")" class="action_btn">Logout</a></li>
        </div>
    </header>

    <div id="container">
        <div style="border-left: 6px solid @colorCode;" id="toast">
            <div class="toast-content">
                <i style="background-color:@colorCode" class="@icon check"></i>
                <div class="messages">
                    <span class="text text-1">@ViewBag.Head</span>
                    <span class="text text-2">@ViewBag.Message</span>
                </div>
            </div>
            <i class="fa-solid fa-xmark close"></i>
        </div>
    </div>

    <div style="margin-block:3rem">
        @RenderBody()
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>


    <script>

        const toggle_btn = document.querySelector('.toggle_btn');
        const toggle_btnIcon = document.querySelector('.toggle_btn i');
        const dropdownMenu = document.querySelector('.dropdown');

        toggle_btn.onclick = function () {
            dropdownMenu.classList.toggle('open');

            const isOpen = dropdownMenu.classList.contains('open')

            toggle_btnIcon.classList = isOpen ? 'fa-solid fa-xmark' : 'fa-solid fa-bars'
        }


        const displayToast = @Html.Raw(Json.Serialize(ViewBag.showToast));

        toast = document.querySelector("#toast");
        closeIcon = document.querySelector(".close");

        function showToast() {
            toast.classList.add("active");
        }

        closeIcon.addEventListener('click', () => {

            toast.classList.remove("active");
        });

        if (displayToast !== null) {
            showToast();
        }

    </script>

</body>
</html>
